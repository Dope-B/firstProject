#include "slime.h"
#define PI 3.141592
void Slime::draw_s() {
	DrawGraph(s_x,s_y, sli, TRUE);
}
void Slime::draw_s_b() {
	DrawGraph(sb_x,sb_y , sli_bullet, TRUE);
}
void Slime::draw_h() {
	DrawGraph(s_x, s_y, horn, TRUE);
}
void Slime::draw_h_b() {
	DrawGraph(sb_x, sb_y, horn_bullet, TRUE);
}
void Slime::getran() {
	s_x = GetRand(400);
	s_y = GetRand(400);
}
void Slime::get_stage() {
	DrawFormatString(530, 330, GetColor(255, 255, 255), "STAGE:%d",stage);
}
void Slime::summon(Bullet&k,acter&b) {
	if (trigger == 0) {
		getran();
		trigger = 1;
		stage += 1;
	}
	else {
		if ((k.x_b >= s_x-35 && k.x_b <= s_x + 40) && (k.y_b >= s_y-35  && k.y_b <= s_y + 40))
		{
			if (stage <= 5) {
				ChangeVolumeSoundMem(150, mon_damaged);
				PlaySoundMem(mon_damaged, DX_PLAYTYPE_BACK);
				s_hp -= 1;
				if (s_hp <= 0) {
					trigger = 0;
					ChangeVolumeSoundMem(120, sound_die);
					PlaySoundMem(sound_die, DX_PLAYTYPE_BACK);
					b.exp += 10;
					reset_s_hp();
				}
			}
			else if (stage > 5) {
				ChangeVolumeSoundMem(150,mon_damaged);
				PlaySoundMem(mon_damaged, DX_PLAYTYPE_BACK);
				h_hp -= 1;
				if (h_hp <= 0) {
					trigger = 0;
					ChangeVolumeSoundMem(120, sound_die);
					PlaySoundMem(sound_die, DX_PLAYTYPE_BACK);
					b.exp += 15;
					reset_h_hp();
				}
			}
		}

		else {
			if (stage <= 5)
			{
				
				DrawFormatString(s_x+10,s_y-20, GetColor(255, 255, 255), "HP:%d", s_hp);
				draw_s();
			}
			else if (stage>5 && stage <= 8)
			{
				DrawFormatString(s_x+10, s_y-20, GetColor(255, 255, 255), "HP:%d", h_hp);
				draw_h();
			}
		}
	}

}
void Slime::move_s() {
	s_x += cos(angle_x)*2;
	s_y += sin(angle_y)*2;
}
void Slime::getran_s() {
	angle_x = GetRand(360)*PI / 180;
	angle_y = GetRand(360) + PI / 180;
}
bool Slime::check(acter&b) {
	if ((s_x+60>=b.x1&&s_x<=b.x1+70)&&(s_y+60>=b.y1&&s_y<=b.y1+70)) {	
		return TRUE;
	}
	else return FALSE;
}
bool Slime::check() {
	if ((s_x <= 0 || s_x >= 430) || (s_y <= 0 || s_y >= 430)) {
		return TRUE;
	}
	else return FALSE;
}
void Slime::act_damaged(acter&b) {
	if ((s_x + 60 >= b.x1&&s_x <= b.x1 + 70) && (s_y + 60 >= b.y1&&s_y <= b.y1 + 70)) {
		b.hp -= 5;
		ChangeVolumeSoundMem(120, sound_damaged);
		PlaySoundMem(sound_damaged, DX_PLAYTYPE_BACK);
		for (int i = 0; i < 50; i++) {
			b.x1 += cos(angle_x+0.1)*1/2;
			b.y1 += sin(angle_y+0.2)*1/2;
			b.draw_d();
		}
	}
}
void Slime::reset_stage() {
	trigger = 1;
	stage = 1;

}
void Slime::reset_s_hp() {
	s_hp = 5;
}
void Slime::reset_h_hp() {
	h_hp = 12;
}
void Slime::shoot_bul(acter&b) {

	if (bul_trigger == 0) {
		sb_x = s_x;
		sb_y = s_y;
		length = s_x - b.x1-30;
		height = s_y - b.y1-30;
		hypo = sqrt(pow(length, 2) + pow(height, 2));
		bul_trigger = 1;
	}
	else {
		if (sb_x > 480 || sb_x <= 0 || sb_y >= 420 || sb_y <= -20) {
			bul_trigger = 0;
		}
		else {
			if (stage <= 5) {
				sb_x -= (length / hypo)*6;
				sb_y -= (height / hypo)*6;
				draw_s_b();
				if ((sb_x >= b.x1-10&&sb_x <= b.x1 + 50) && (sb_y >= b.y1-10&&sb_y <= b.y1 + 50)) {
					bul_trigger = 0;
					PlaySoundMem(mon_damaged, DX_PLAYTYPE_BACK);
					b.hp -= 10;
				}
			}
			else {
				sb_x -= (length / hypo)*8;
				sb_y -= (height / hypo) * 8;
				draw_h_b();
				if ((sb_x >= b.x1-10&&sb_x <= b.x1 + 50) && (sb_y >= b.y1-10&&sb_y <= b.y1 + 50)) {
					bul_trigger = 0;
					PlaySoundMem(mon_damaged, DX_PLAYTYPE_BACK);
					b.hp -= 10;
				}
			}
		}
	}
}
